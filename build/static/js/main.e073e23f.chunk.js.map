{"version":3,"sources":["components/HeaderComponent.js","components/LoadingComponent.js","shared/baseUrl.js","components/HomeComponent.js","components/DishdetailComponent.js","components/MenuComponent.js","components/FooterComponent.js","components/ContactComponent.js","components/AboutComponent.js","redux/ActionCreator.js","redux/ActionTypes.js","components/MainComponent.js","redux/dishes.js","redux/comments.js","redux/Promotions.js","redux/leaders.js","redux/forms.js","App.js","redux/configureStore.js","registerServiceWorker.js","index.js"],"names":["Header","props","state","isNavOpen","isModalOpen","toggleNav","bind","toggleModal","handleLogin","this","setState","event","alert","username","value","password","remember","checked","preventDefault","dark","expand","className","onClick","href","src","height","width","alt","isOpen","navbar","to","outline","toggle","onSubmit","htmlFor","type","id","name","innerRef","input","check","color","Component","Loading","baseUrl","RenderCard","item","isLoading","errMess","in","transformProps","exitTransform","image","designation","description","Home","dish","dishesLoading","dishErrMess","promotion","promoLoading","promoErrMess","leader","leadersloading","leadersError","required","val","length","maxLength","len","CommentForm","handleSubmit","values","postComment","dishId","rating","author","comment","md","select","model","text","placeholder","validators","minLength","show","messages","textarea","rows","size","DishdetailComponent","dishItem","commentItem","comments","comment1","map","key","Intl","DateTimeFormat","year","month","day","format","Date","parse","date","RenderComments","active","RenderMenuItem","Menu","console","log","menu","dishes","Footer","isNumber","isNaN","Number","validEmail","test","Contact","postFeedback","firstname","lastname","telnum","email","agree","contactType","message","resetFeedbackForm","role","offset","checkbox","RenderLeader","leaders","left","object","body","heading","About","title","list","dishesFailed","errmess","payload","addDishes","commentsFailed","addComments","promosLoading","promosFailed","addPromos","promos","leadersLoading","leadersFailed","addLeaders","Main","fetchPromos","fetchDishes","fetchComments","fetchLeaders","TransitionGroup","CSSTransition","location","classNames","timeout","path","component","filter","featured","promotions","promo","exact","match","parseInt","params","commentsErrMess","withRouter","connect","dispatch","newComment","toISOString","fetch","method","JSON","stringify","headers","credentials","then","response","ok","error","Error","status","statusText","json","addComment","catch","actions","reset","number","feedback","newFeedback","addFeedback","Dishes","action","Comments","concat","Promotions","Leaders","InitialFeedback","store","createStore","combineReducers","createForms","applyMiddleware","thunk","logger","App","isLocalhost","Boolean","window","hostname","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","ReactDOM","render","document","getElementById","URL","process","origin","addEventListener","get","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.e073e23f.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport { Nav, Navbar, NavbarBrand, NavbarToggler, Collapse, NavItem, Jumbotron ,\r\nButton , Modal , ModalBody , ModalHeader, FormGroup, Input, Label,\r\nForm } from 'reactstrap';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nclass Header extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n    this.state = {\r\n          isNavOpen: false,\r\n          isModalOpen:false\r\n        };\r\n        this.toggleNav = this.toggleNav.bind(this);\r\n        this.toggleModal = this.toggleModal.bind(this);\r\n        this.handleLogin = this.handleLogin.bind(this);\r\n    \r\n      }\r\n\r\n      toggleNav() {\r\n        this.setState({\r\n          isNavOpen: !this.state.isNavOpen\r\n        });\r\n      }\r\ntoggleModal(){\r\n    this.setState({\r\n        isModalOpen : !this.state.isModalOpen\r\n    })\r\n}\r\nhandleLogin(event){\r\nthis.toggleModal();\r\nalert(\"username : \" + this.username.value + \"password : \" + this.password.value\r\n+ \"Remember: \" + this.remember.checked)\r\nevent.preventDefault();\r\n}\r\n    render() {\r\n        return(\r\n            <div>\r\n                <Navbar dark expand=\"md\">\r\n                    <div className=\"container\">\r\n                        <NavbarToggler onClick={this.toggleNav} />\r\n                        <NavbarBrand className=\"mr-auto\" href=\"/\"><img src='assets/images/logo.png' height=\"30\" width=\"41\" alt='Ristorante Con Fusion' /></NavbarBrand>\r\n                        <Collapse isOpen={this.state.isNavOpen} navbar>\r\n                            <Nav navbar>\r\n                            <NavItem>\r\n                                <NavLink className=\"nav-link\"  to='/home'><span className=\"fa fa-home fa-lg\"></span> Home</NavLink>\r\n                            </NavItem>\r\n                            <NavItem>\r\n                                <NavLink className=\"nav-link\" to='/aboutus'><span className=\"fa fa-info fa-lg\"></span> About Us</NavLink>\r\n                            </NavItem>\r\n                            <NavItem>\r\n                                <NavLink className=\"nav-link\"  to='/menu'><span className=\"fa fa-list fa-lg\"></span> Menu</NavLink>\r\n                            </NavItem>\r\n                            <NavItem>\r\n                                <NavLink className=\"nav-link\" to='/contactus'><span className=\"fa fa-address-card fa-lg\"></span> Contact Us</NavLink>\r\n                            </NavItem>\r\n                            </Nav>\r\n                            <Nav className=\"ml-auto\" navbar>\r\n                                <NavItem>\r\n                                    <Button outline onClick={this.toggleModal}>\r\n                                        <span className=\"fa fa-sign-in fa-lg\" /> Login\r\n                                    </Button>\r\n                                </NavItem>\r\n                            </Nav>\r\n                        </Collapse>\r\n                    </div>\r\n                </Navbar>\r\n                <Jumbotron>\r\n                    <div className=\"container\">\r\n                        <div className=\"row row-header\">\r\n                            <div className=\"col-12 col-sm-6\">\r\n                                <h1>Ristorante con Fusion</h1>\r\n                                <p>We take inspiration from the World's best cuisines, and create a unique fusion experience. Our lipsmacking creations will tickle your culinary senses!</p>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </Jumbotron>\r\n                <Modal isOpen={this.state.isModalOpen} toggle={this.toggleModal}>\r\n                    <ModalHeader toggle={this.toggleModal}>Login</ModalHeader>\r\n                    <ModalBody>\r\n                    <Form onSubmit={this.handleLogin}>\r\n                            <FormGroup>\r\n                                <Label htmlFor=\"username\">Username</Label>\r\n                                <Input type=\"text\" id=\"username\" name=\"username\"\r\n                                    innerRef={(input) => this.username = input} />\r\n                            </FormGroup>\r\n                            <FormGroup>\r\n                                <Label htmlFor=\"password\">Password</Label>\r\n                                <Input type=\"password\" id=\"password\" name=\"password\"\r\n                                    innerRef={(input) => this.password = input}  />\r\n                            </FormGroup>\r\n                            <FormGroup check>\r\n                                <Label check>\r\n                                    <Input type=\"checkbox\" name=\"remember\"\r\n                                    innerRef={(input) => this.remember = input}  />\r\n                                    Remember me\r\n                                </Label>\r\n                            </FormGroup>\r\n                            <Button type=\"submit\" value=\"submit\" color=\"primary\">Login</Button>\r\n                        </Form>\r\n                    </ModalBody>\r\n                </Modal>\r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport default Header","import React from 'react';\r\n\r\nexport const Loading = () => {\r\n    return(\r\n        <div className=\"col-12\">\r\n            <span className=\"fa fa-spinner fa-pulse fa-3x fa-fw text-primary\"></span>\r\n            <p>Loading . . .</p>\r\n        </div>\r\n    );\r\n};","export const baseUrl = 'http://localhost:3001/';","import React from 'react';\r\nimport { Card, CardImg, CardText, CardBody,\r\n    CardTitle, CardSubtitle} from 'reactstrap';\r\nimport { Loading } from './LoadingComponent';\r\nimport { baseUrl } from '../shared/baseUrl';\r\nimport {FadeTransform} from 'react-animation-components';\r\n\r\nfunction RenderCard({item, isLoading, errMess}) {    \r\n    if (isLoading) {\r\n        return(\r\n                <Loading />\r\n        );\r\n    }\r\n    else if (errMess) {\r\n        return(\r\n                <h4>{errMess}</h4>\r\n        );\r\n    }\r\n    else \r\n     return(   \r\n            <FadeTransform in \r\n               transformProps ={{\r\n                   exitTransform: 'scale(0.5) translateY(-50%)'\r\n               }}>\r\n            <Card>\r\n                <CardImg src={baseUrl + item.image} alt={item.name} />\r\n                <CardBody>\r\n                <CardTitle>{item.name}</CardTitle>\r\n                <strong>\r\n                {item.designation ? <CardSubtitle>{item.designation}</CardSubtitle> : null }\r\n                </strong>\r\n                <CardText>{item.description}</CardText>\r\n                </CardBody>\r\n            </Card>\r\n            </FadeTransform>\r\n        );\r\n\r\n}\r\nfunction Home(props) {\r\n    return(\r\n        <div className=\"container\">\r\n            <div className=\"row align-items-start\">\r\n                <div className=\"col-12 col-md m-1\">\r\n                <RenderCard item={props.dish} isLoading={props.dishesLoading} errMess={props.dishErrMess}  />\r\n                </div>\r\n                <div className=\"col-12 col-md m-1\">\r\n                <RenderCard item={props.promotion} isLoading={props.promoLoading} errMess={props.promoErrMess} />\r\n                </div>\r\n                <div className=\"col-12 col-md m-1\">\r\n                    <RenderCard item={props.leader} isLoading={props.leadersloading} errMess={props.leadersError} />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Home;","import React, { Component } from 'react';\r\nimport { Modal , ModalBody , ModalHeader, Label,Row , Col,\r\nCard, CardImg, CardBody,Button, CardText, CardTitle , Breadcrumb , BreadcrumbItem} from 'reactstrap';\r\nimport { Control, LocalForm, Errors } from 'react-redux-form';\r\nimport {Link} from 'react-router-dom';\r\nimport { Loading } from './LoadingComponent';\r\nimport { baseUrl } from '../shared/baseUrl';\r\nimport {FadeTransform , Fade , Stagger} from 'react-animation-components';\r\nconst required = (val) => val && val.length;\r\nconst maxLength = (len) => (val) => !(val) || (val.length <= len);\r\nconst minLength = (len) => (val) => val && (val.length >= len);\r\n\r\nclass  CommentForm  extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n    this.state = {\r\n          isModalOpen:false\r\n        };\r\n        this.toggleModal = this.toggleModal.bind(this);\r\n      }\r\n      toggleModal(){\r\n        this.setState({\r\n            isModalOpen : !this.state.isModalOpen\r\n        })\r\n    }\r\n    handleSubmit = (values) => {\r\n        this.props.postComment(this.props.dishId , values.rating , values.author , values.comment)\r\n        this.setState({     \r\n        isModalOpen : !this.state.isModalOpen\r\n    })\r\n    }\r\n    render() { \r\n        return (\r\n            <div>\r\n            <Button outline onClick={this.toggleModal} className=\"mt-1\"> <span className=\"fa fa-pencil fa-lg\"/> Submit Comment</Button>\r\n            <Modal isOpen={this.state.isModalOpen} toggle={this.toggleModal}>\r\n                    <ModalHeader toggle={this.toggleModal}>Submit Comment</ModalHeader>\r\n                    <ModalBody>\r\n                    <LocalForm onSubmit={(values) => this.handleSubmit(values)}>\r\n                    <Row className=\"form-group\">\r\n                                <Label htmlFor=\"rating\" md={4}>Rating</Label>\r\n                                <Col md={12}>\r\n                                <Control.select model=\".rating\" name=\"rating\"\r\n                                        className=\"form-control\">\r\n                                        <option>1</option>\r\n                                        <option>2</option>\r\n                                        <option>3</option>\r\n                                        <option>4</option>\r\n                                        <option>5</option>\r\n                                    </Control.select>\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"author\" md={4}>Your Name</Label>\r\n                                <Col md={12}>\r\n                                    <Control.text model=\".author\" id=\"author\" name=\"author\"\r\n                                        placeholder=\"Your Name\"\r\n                                        className=\"form-control\"\r\n                                        validators={{\r\n                                            required, minLength: minLength(3), maxLength: maxLength(15)\r\n                                        }}\r\n                                         />\r\n                                    <Errors\r\n                                        className=\"text-danger\"\r\n                                        model=\".author\"\r\n                                        show=\"touched\"\r\n                                        messages={{\r\n                                            required: 'Required ',\r\n                                            minLength: 'Must be greater than 2 characters',\r\n                                            maxLength: 'Must be 15 characters or less'\r\n                                        }}\r\n                                     />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"comment\" md={4}>Comment</Label>\r\n                                <Col md={12}>\r\n                                    <Control.textarea model=\".comment\" id=\"comment\" name=\"comment\"\r\n                                        rows=\"6\"\r\n                                        className=\"form-control\" />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Col md={{size:10}}>\r\n                                    <Button type=\"submit\" color=\"primary\">\r\n                                    Submit\r\n                                    </Button>\r\n                                </Col>\r\n                            </Row>\r\n                        </LocalForm>\r\n                    \r\n                    </ModalBody>\r\n                </Modal>\r\n                </div>\r\n       );\r\n    }\r\n}\r\n\r\n\r\nfunction RenderComments(comments , postComment , dishId) {\r\n        if (comments == null) {\r\n            return (<div></div>)\r\n        }\r\n\r\n        const comment1 = comments.map(comment => {\r\n            return (\r\n                <Fade in>\r\n                <li key={comment.id}>\r\n                    <p>{comment.comment}</p>\r\n                    <p>-- {comment.author},\r\n                    &nbsp;\r\n                    {new Intl.DateTimeFormat('en-US', {\r\n                            year: 'numeric',\r\n                            month: 'short',\r\n                            day: '2-digit'\r\n                        }).format(new Date(Date.parse(comment.date)))}\r\n                    </p>\r\n                </li>\r\n                </Fade>\r\n            )\r\n        })\r\n        return (\r\n           <div className='col-12 col-md-5 m-1'>\r\n                <h4> Comments </h4>\r\n                <ul className='list-unstyled'>\r\n                <Stagger in>\r\n                    {comment1}\r\n                    <CommentForm  dishId={dishId} postComment={postComment}/>\r\n                    </Stagger>\r\n                </ul>\r\n\r\n            </div>\r\n        )\r\n    }\r\n\r\n    function RenderDish(dish) {\r\n        if (dish != null) {\r\n            return (\r\n                <div className='col-12 col-md-5 m-1'>\r\n                     <FadeTransform in \r\n               transformProps ={{\r\n                   exitTransform: 'scale(0.5) translateY(-50%)'\r\n               }}>  <Card>\r\n                        <CardImg width=\"100%\" src={baseUrl +dish.image} alt={dish.name} />\r\n                        <CardBody>\r\n                            <CardTitle>{dish.name}</CardTitle>\r\n                            <CardText>{dish.description}</CardText>\r\n                        </CardBody>\r\n                    </Card>\r\n                    </FadeTransform>\r\n                </div>\r\n            )\r\n        }\r\n        else {\r\n            return (<div></div>)\r\n        }\r\n    }\r\n      \r\n    const DishdetailComponent = (props) => {\r\n        if (props.isLoading) {\r\n            return(\r\n                <div className=\"container\">\r\n                    <div className=\"row\">            \r\n                        <Loading />\r\n                    </div>\r\n                </div>\r\n            );\r\n        }\r\n        else if (props.errMess) {\r\n            return(\r\n                <div className=\"container\">\r\n                    <div className=\"row\">            \r\n                        <h4>{props.errMess}</h4>\r\n                    </div>\r\n                </div>\r\n            );\r\n        }\r\n        else if (props.dish != null) {\r\n         \r\n        const dishItem =RenderDish(props.dish)\r\n        const commentItem = RenderComments(props.comments , props.postComment ,props.dish.id)\r\n        return (\r\n            <div className=\"container\">\r\n                    <div className=\"row\">\r\n                <Breadcrumb>\r\n                <BreadcrumbItem><Link to=\"/home\">Home</Link></BreadcrumbItem>\r\n                    <BreadcrumbItem><Link to=\"/menu\">Menu</Link></BreadcrumbItem>\r\n                    <BreadcrumbItem active>{props.dish.name}</BreadcrumbItem>\r\n                </Breadcrumb>\r\n                <div className=\"col-12\">\r\n                    <h3>{props.dish.name}</h3>\r\n                    <hr />\r\n                </div>\r\n            </div>\r\n            <div className='row'>\r\n                {dishItem}\r\n                {commentItem}\r\n            </div>\r\n            </div>\r\n        )\r\n    }\r\n    else\r\n        return(\r\n            <div></div>\r\n        )\r\n    }\r\n\r\n    \r\nexport default DishdetailComponent\r\n","import React from 'react';\r\nimport { Card, CardImg, CardImgOverlay,CardTitle , Breadcrumb , BreadcrumbItem} from 'reactstrap';\r\nimport {Link} from 'react-router-dom';\r\nimport { Loading } from './LoadingComponent';\r\nimport { baseUrl } from '../shared/baseUrl';\r\n        // renderDish(dish) {\r\n        //     if (dish != null)\r\n        //         return(\r\n        //             <Card>\r\n        //                 <CardImg top src={dish.image} alt={dish.name} />\r\n        //                 <CardBody>\r\n        //                   <CardTitle>{dish.name}</CardTitle>\r\n        //                   <CardText>{dish.description}</CardText>\r\n        //                 </CardBody>\r\n        //             </Card>\r\n        //         );\r\n        //     else\r\n        //         return(\r\n        //             <div></div>\r\n        //         );\r\n        // }\r\nfunction RenderMenuItem({dish}){\r\n     return(\r\n        <Card>\r\n        <Link to={`/menu/${dish.id}`} >\r\n         <CardImg width=\"100%\" src={baseUrl + dish.image} alt={dish.name} />\r\n         <CardImgOverlay>\r\n         <CardTitle>{dish.name}</CardTitle>\r\n        </CardImgOverlay>\r\n        </Link>\r\n  </Card>\r\n    )\r\n}\r\nconst Menu = (props) => {\r\n    console.log(props)\r\n    const menu = props.dishes.dishes.map((dish) => {\r\n        return (\r\n            <div key={dish.id} className=\"col-12 col-md-5 m-1\">\r\n              <RenderMenuItem dish={dish}  />\r\n              </div>\r\n              );\r\n          });\r\n          \r\n        if (props.dishes.isLoading) {\r\n            return(\r\n                <div className=\"container\">\r\n                    <div className=\"row\">            \r\n                        <Loading />\r\n                    </div>\r\n                </div>\r\n            );\r\n        }\r\n        else if (props.dishes.errMess) {\r\n            return(\r\n                <div className=\"container\">\r\n                    <div className=\"row\"> \r\n                        <div className=\"col-12\">\r\n                            <h4>{props.dishes.errMess}</h4>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            );\r\n        }\r\n        else\r\n          \r\n        return (\r\n        <div className=\"container\">\r\n        <div className=\"row\">\r\n            <Breadcrumb>\r\n                <BreadcrumbItem><Link to=\"/home\">Home</Link></BreadcrumbItem>\r\n                <BreadcrumbItem active>Menu</BreadcrumbItem>\r\n            </Breadcrumb>\r\n            <div className=\"col-12\">\r\n                <h3>Menu</h3>\r\n                <hr />\r\n            </div>\r\n        </div>\r\n            <div className=\"row\">\r\n                    {menu}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n    \r\n\r\nexport default Menu;\r\n\r\n","import React from 'react';\r\nimport {Link} from 'react-router-dom';\r\nfunction Footer(props) {\r\n    return(\r\n    <div className=\"footer\">\r\n        <div className=\"container\">\r\n            <div className=\"row justify-content-center\">             \r\n                <div className=\"col-4 offset-1 col-sm-2\">\r\n                    <h5>Links</h5>\r\n                    <ul className=\"list-unstyled\">\r\n                        <li><Link to=\"/home\">Home</Link></li>\r\n                        <li><Link to=\"/aboutus\">About</Link></li>\r\n                        <li><Link to=\"/menu\">Menu</Link></li>\r\n                        <li><Link to=\"/contactus\">Contact</Link></li>\r\n                    </ul>\r\n                </div>\r\n                <div className=\"col-7 col-sm-5\">\r\n                    <h5>Our Address</h5>\r\n                    <address>\r\n\t\t              121, Clear Water Bay Road<br />\r\n\t\t              Clear Water Bay, Kowloon<br />\r\n\t\t              HONG KONG<br />\r\n\t\t              <i className=\"fa fa-phone fa-lg\"></i>: +852 1234 5678<br />\r\n\t\t              <i className=\"fa fa-fax fa-lg\"></i>: +852 8765 4321<br />\r\n\t\t              <i className=\"fa fa-envelope fa-lg\"></i>: <a href=\"mailto:confusion@food.net\">\r\n                         confusion@food.net</a>\r\n                    </address>\r\n                </div>\r\n                <div className=\"col-12 col-sm-4 align-self-center\">\r\n                    <div className=\"text-center\">\r\n                        <a className=\"btn btn-social-icon btn-google\" href=\"http://google.com/+\"><i className=\"fa fa-google-plus\"></i></a>\r\n                        <a className=\"btn btn-social-icon btn-facebook\" href=\"http://www.facebook.com/profile.php?id=\"><i className=\"fa fa-facebook\"></i></a>\r\n                        <a className=\"btn btn-social-icon btn-linkedin\" href=\"http://www.linkedin.com/in/\"><i className=\"fa fa-linkedin\"></i></a>\r\n                        <a className=\"btn btn-social-icon btn-twitter\" href=\"http://twitter.com/\"><i className=\"fa fa-twitter\"></i></a>\r\n                        <a className=\"btn btn-social-icon btn-google\" href=\"http://youtube.com/\"><i className=\"fa fa-youtube\"></i></a>\r\n                        <a className=\"btn btn-social-icon\" href=\"mailto:\"><i className=\"fa fa-envelope-o\"></i></a>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"row justify-content-center\">             \r\n                <div className=\"col-auto\">\r\n                    <p>© Copyright 2018 Ristorante Con Fusion</p>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    )\r\n}\r\n\r\nexport default Footer;","import React, {Component} from 'react';\r\nimport {Breadcrumb , BreadcrumbItem ,  Button, Row, Label,Col} from 'reactstrap'\r\nimport {Link} from 'react-router-dom';\r\nimport { Control, Form, Errors} from 'react-redux-form';\r\n\r\n\r\nconst required = (val) => val && val.length;\r\nconst maxLength = (len) => (val) => !(val) || (val.length <= len);\r\nconst minLength = (len) => (val) => val && (val.length >= len);\r\nconst isNumber = (val) => !isNaN(Number(val));\r\nconst validEmail = (val) => /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(val);\r\n\r\n\r\nclass Contact extends Component{\r\n    constructor(props){\r\n        super(props);\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n}\r\nhandleSubmit(values) {\r\n    this.props.postFeedback(values.firstname , values.lastname , values.telnum , values.email , values.agree , values.contactType , values.message)\r\n    this.props.resetFeedbackForm();\r\n\r\n    // event.preventDefault();\r\n}\r\n   render(){\r\n    return(\r\n        <div className=\"container\">\r\n        <div className=\"row\">\r\n            <Breadcrumb>\r\n                <BreadcrumbItem><Link to=\"/home\">Home</Link></BreadcrumbItem>\r\n                <BreadcrumbItem active>Contact Us</BreadcrumbItem>\r\n            </Breadcrumb>\r\n            <div className=\"col-12\">\r\n                <h3>Contact Us</h3>\r\n                <hr />\r\n            </div>\r\n        </div>\r\n            <div className=\"row row-content\">\r\n                <div className=\"col-12\">\r\n                <h3>Location Information</h3>\r\n                </div>\r\n                <div className=\"col-12 col-sm-4 offset-sm-1\">\r\n                        <h5>Our Address</h5>\r\n                        <address>\r\n                        121, Clear Water Bay Road<br />\r\n                        Clear Water Bay, Kowloon<br />\r\n                        HONG KONG<br />\r\n                        <i className=\"fa fa-phone\"></i>: +852 1234 5678<br />\r\n                        <i className=\"fa fa-fax\"></i>: +852 8765 4321<br />\r\n                        <i className=\"fa fa-envelope\"></i>: <a href=\"mailto:confusion@food.net\">confusion@food.net</a>\r\n                        </address>\r\n                </div>\r\n                <div className=\"col-12 col-sm-6 offset-sm-1\">\r\n                    <h5>Map of our Location</h5>\r\n                </div>\r\n                <div className=\"col-12 col-sm-11 offset-sm-1\">\r\n                    <div className=\"btn-group\" role=\"group\">\r\n                        <a role=\"button\" className=\"btn btn-primary\" href=\"tel:+85212345678\"><i className=\"fa fa-phone\"></i> Call</a>\r\n                        <a  role=\"button\" className=\"btn btn-info\"><i className=\"fa fa-skype\"></i> Skype</a>\r\n                        <a  role=\"button\" className=\"btn btn-success\" href=\"mailto:confusion@food.net\"><i className=\"fa fa-envelope-o\"></i> Email</a>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"row row-content\">\r\n                   <div className=\"col-12\">\r\n                      <h3>Send us your Feedback</h3>\r\n                   </div>\r\n                    <div className=\"col-12 col-md-9\">\r\n                    <Form model=\"feedback\" onSubmit={(values) => this.handleSubmit(values)}>\r\n                    <Row className=\"form-group\">\r\n                                <Label htmlFor=\"firstname\" md={2}>First Name</Label>\r\n                                <Col md={10}>\r\n                                    <Control.text model=\".firstname\" id=\"firstname\" name=\"firstname\"\r\n                                        placeholder=\"First Name\"\r\n                                        className=\"form-control\"\r\n                                        validators={{\r\n                                            required, minLength: minLength(3), maxLength: maxLength(15)\r\n                                        }}\r\n                                         />\r\n                                    <Errors\r\n                                        className=\"text-danger\"\r\n                                        model=\".firstname\"\r\n                                        show=\"touched\"\r\n                                        messages={{\r\n                                            required: 'Required',\r\n                                            minLength: 'Must be greater than 2 characters',\r\n                                            maxLength: 'Must be 15 characters or less'\r\n                                        }}\r\n                                     />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"lastname\" md={2}>Last Name</Label>\r\n                                <Col md={10}>\r\n                                    <Control.text model=\".lastname\" id=\"lastname\" name=\"lastname\"\r\n                                        placeholder=\"Last Name\"\r\n                                        className=\"form-control\"\r\n                                        validators={{\r\n                                            required, minLength: minLength(3), maxLength: maxLength(15)\r\n                                        }}\r\n                                         />\r\n                                    <Errors\r\n                                        className=\"text-danger\"\r\n                                        model=\".lastname\"\r\n                                        show=\"touched\"\r\n                                        messages={{\r\n                                            required: 'Required',\r\n                                            minLength: 'Must be greater than 2 characters',\r\n                                            maxLength: 'Must be 15 characters or less'\r\n                                        }}\r\n                                     />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"telnum\" md={2}>Contact Tel.</Label>\r\n                                <Col md={10}>\r\n                                    <Control.text model=\".telnum\" id=\"telnum\" name=\"telnum\"\r\n                                        placeholder=\"Tel. Number\"\r\n                                        className=\"form-control\"\r\n                                        validators={{\r\n                                            required, minLength: minLength(3), maxLength: maxLength(15), isNumber\r\n                                        }}\r\n                                         />\r\n                                    <Errors\r\n                                        className=\"text-danger\"\r\n                                        model=\".telnum\"\r\n                                        show=\"touched\"\r\n                                        messages={{\r\n                                            required: 'Required',\r\n                                            minLength: 'Must be greater than 2 numbers',\r\n                                            maxLength: 'Must be 15 numbers or less',\r\n                                            isNumber: 'Must be a number'\r\n                                        }}\r\n                                     />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"email\" md={2}>Email</Label>\r\n                                <Col md={10}>\r\n                                    <Control.text model=\".email\" id=\"email\" name=\"email\"\r\n                                        placeholder=\"Email\"\r\n                                        className=\"form-control\"\r\n                                        validators={{\r\n                                            required, validEmail\r\n                                        }}\r\n                                         />\r\n                                    <Errors\r\n                                        className=\"text-danger\"\r\n                                        model=\".email\"\r\n                                        show=\"touched\"\r\n                                        messages={{\r\n                                            required: 'Required',\r\n                                            validEmail: 'Invalid Email Address'\r\n                                        }}\r\n                                     />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Col md={{size: 6, offset: 2}}>\r\n                                    <div className=\"form-check\">\r\n                                        <Label check>\r\n                                            <Control.checkbox model=\".agree\" name=\"agree\"\r\n                                                className=\"form-check-input\"\r\n                                                 /> {' '}\r\n                                                <strong>May we contact you?</strong>\r\n                                        </Label>\r\n                                    </div>\r\n                                </Col>\r\n                                <Col md={{size: 3, offset: 1}}>\r\n                                    <Control.select model=\".contactType\" name=\"contactType\"\r\n                                        className=\"form-control\">\r\n                                        <option>Tel.</option>\r\n                                        <option>Email</option>\r\n                                    </Control.select>\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"message\" md={2}>Your Feedback</Label>\r\n                                <Col md={10}>\r\n                                    <Control.textarea model=\".message\" id=\"message\" name=\"message\"\r\n                                        rows=\"12\"\r\n                                        className=\"form-control\" />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Col md={{size:10, offset: 2}}>\r\n                                    <Button type=\"submit\" color=\"primary\">\r\n                                    Send Feedback\r\n                                    </Button>\r\n                                </Col>\r\n                            </Row>\r\n                        </Form>\r\n                    </div>\r\n               </div>\r\n\r\n        </div>\r\n    );\r\n    }\r\n}\r\n\r\nexport default Contact;","import React from 'react';\r\nimport { Breadcrumb, BreadcrumbItem, Card, CardBody, CardHeader, Media } from 'reactstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport { Loading } from './LoadingComponent';\r\nimport { baseUrl } from '../shared/baseUrl';\r\nimport {Fade} from 'react-animation-components';\r\n\r\n\r\n\r\nfunction RenderLeader({props}){\r\n const isLoading = props.leaders.isLoading;\r\n const errMess = props.leaders.errMess;\r\n const leaders = props.leaders.leaders;\r\n    if(isLoading){\r\n        return(\r\n            <div>\r\n                <Loading />\r\n            </div>\r\n        )\r\n    }\r\n    else if(errMess){\r\n        return(\r\n            <h4>{errMess}</h4>\r\n        )\r\n    }\r\n    else{\r\n     const leader = leaders.map((leader)=>{\r\n       return (\r\n           <Fade in>\r\n            <Media className=\"mt-4\" key={leader.id}>\r\n                <Media left className=\"mr-5\">\r\n                    <Media object src={baseUrl + leader.image}/>\r\n                </Media>\r\n                <Media body>\r\n                    <Media heading>\r\n                        {leader.name}\r\n                    </Media>\r\n                    <p>{leader.designation}</p>\r\n                    <p>{leader.description}</p>\r\n                </Media>\r\n            </Media>\r\n            </Fade>\r\n        );\r\n    })\r\nreturn(leader)}\r\n}\r\nfunction About(props) {\r\n\r\n    \r\n    return(\r\n        <div className=\"container\">\r\n            <div className=\"row\">\r\n                <Breadcrumb>\r\n                    <BreadcrumbItem><Link to=\"/home\">Home</Link></BreadcrumbItem>\r\n                    <BreadcrumbItem active>About Us</BreadcrumbItem>\r\n                </Breadcrumb>\r\n                <div className=\"col-12\">\r\n                    <h3>About Us</h3>\r\n                    <hr />\r\n                </div>                \r\n            </div>\r\n            <div className=\"row row-content\">\r\n                <div className=\"col-12 col-md-6\">\r\n                    <h2>Our History</h2>\r\n                    <p>Started in 2010, Ristorante con Fusion quickly established itself as a culinary icon par excellence in Hong Kong. With its unique brand of world fusion cuisine that can be found nowhere else, it enjoys patronage from the A-list clientele in Hong Kong.  Featuring four of the best three-star Michelin chefs in the world, you never know what will arrive on your plate the next time you visit us.</p>\r\n                    <p>The restaurant traces its humble beginnings to <em>The Frying Pan</em>, a successful chain started by our CEO, Mr. Peter Pan, that featured for the first time the world's best cuisines in a pan.</p>\r\n                </div>\r\n                <div className=\"col-12 col-md-5\">\r\n                    <Card>\r\n                        <CardHeader className=\"bg-primary text-white\">Facts At a Glance</CardHeader>\r\n                        <CardBody>\r\n                            <dl className=\"row p-1\">\r\n                                <dt className=\"col-6\">Started</dt>\r\n                                <dd className=\"col-6\">3 Feb. 2013</dd>\r\n                                <dt className=\"col-6\">Major Stake Holder</dt>\r\n                                <dd className=\"col-6\">HK Fine Foods Inc.</dd>\r\n                                <dt className=\"col-6\">Last Year's Turnover</dt>\r\n                                <dd className=\"col-6\">$1,250,375</dd>\r\n                                <dt className=\"col-6\">Employees</dt>\r\n                                <dd className=\"col-6\">40</dd>\r\n                            </dl>\r\n                        </CardBody>\r\n                    </Card>\r\n                </div>\r\n                <div className=\"col-12\">\r\n                    <Card>\r\n                        <CardBody className=\"bg-faded\">\r\n                            <blockquote className=\"blockquote\">\r\n                                <p className=\"mb-0\">You better cut the pizza in four pieces because\r\n                                    I'm not hungry enough to eat six.</p>\r\n                                <footer className=\"blockquote-footer\">Yogi Berra,\r\n                                <cite title=\"Source Title\">The Wit and Wisdom of Yogi Berra,\r\n                                    P. Pepe, Diversion Books, 2014</cite>\r\n                                </footer>\r\n                            </blockquote>\r\n                        </CardBody>\r\n                    </Card>\r\n                </div>\r\n            </div>\r\n            <div className=\"row row-content\">\r\n                <div className=\"col-12\">\r\n                    <h2>Corporate Leadership</h2>\r\n                </div>\r\n                <div className=\"col-12\">\r\n                    <Media list >\r\n                        <RenderLeader props={props} />\r\n                    </Media>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default About;\r\n\r\n","import * as ActionTypes from './ActionTypes';\r\nimport {baseUrl} from '../shared/baseUrl';\r\n\r\nexport const addComment = (comment) => ({\r\n    type: ActionTypes.ADD_COMMENT,\r\n    payload:comment\r\n});\r\n\r\nexport const postComment = (dishId , rating , author , comment) => (dispatch) => { \r\n const newComment = {\r\n        dishId:dishId,\r\n        rating:rating,\r\n        author:author,\r\n        comment:comment \r\n }\r\n newComment.date = new Date().toISOString();\r\n return fetch(baseUrl + 'comments' , {\r\n    method:'POST',\r\n    body:JSON.stringify(newComment),\r\n    headers:{\r\n        'Content-Type':'application/json'\r\n    },\r\n    credentials:'same-origin'\r\n })\r\n .then(response => {\r\n    if (response.ok) {\r\n      return response;\r\n    } else {\r\n      var error = new Error('Error ' + response.status + ': ' + response.statusText);\r\n      error.response = response;\r\n      throw error;\r\n    }\r\n  },\r\n  error => {\r\n        var errmess = new Error(error.message);\r\n        throw errmess;\r\n  })\r\n  .then(response => response.json())\r\n  .then(response => dispatch(addComment(response)))\r\n  .catch(error => {console.log('Post Comment' + error.message)\r\n   alert('your comment could not be posted \\nError:' + error.message );});\r\n}\r\n\r\nexport const fetchDishes = () => (dispatch) => {\r\n \r\n    dispatch(dishesLoading(true));\r\n\r\n    return fetch(baseUrl + 'dishes')\r\n    .then(response => {\r\n        if (response.ok) {\r\n          return response;\r\n        } else {\r\n          var error = new Error('Error ' + response.status + ': ' + response.statusText);\r\n          error.response = response;\r\n          throw error;\r\n        }\r\n      },\r\n      error => {\r\n            var errmess = new Error(error.message);\r\n            throw errmess;\r\n      })\r\n    .then(response => response.json())\r\n    .then(dishes => dispatch(addDishes(dishes)))\r\n    .catch(error => dispatch(dishesFailed(error.message)));\r\n}\r\n\r\n\r\n\r\nexport const dishesLoading = () => ({\r\n    type: ActionTypes.DISHES_LOADING\r\n});\r\n\r\nexport const dishesFailed = (errmess) => ({\r\n    type: ActionTypes.DISHES_FAILED,\r\n    payload: errmess\r\n});\r\n\r\nexport const addDishes = (dishes) => ({\r\n    type: ActionTypes.ADD_DISHES,\r\n    payload: dishes\r\n});\r\nexport const fetchComments = () => (dispatch) => {    \r\n   \r\n    return fetch(baseUrl + 'comments')\r\n    .then(response => {\r\n        if (response.ok) {\r\n          return response;\r\n        } else {\r\n          var error = new Error('Error ' + response.status + ': ' + response.statusText);\r\n          error.response = response;\r\n          throw error;\r\n        }\r\n      },\r\n      error => {\r\n            var errmess = new Error(error.message);\r\n            throw errmess;\r\n      })\r\n    .then(response => response.json())\r\n    .then(comments => dispatch(addComments(comments)))\r\n    .catch(error => dispatch(commentsFailed(error.message)));\r\n};\r\n   \r\n\r\nexport const commentsFailed = (errmess) => ({\r\n    type: ActionTypes.COMMENTS_FAILED,\r\n    payload: errmess\r\n});\r\n\r\nexport const addComments = (comments) => ({\r\n    type: ActionTypes.ADD_COMMENTS,\r\n    payload: comments\r\n});\r\n\r\n\r\nexport const fetchPromos = () => (dispatch) => {\r\n    \r\n    dispatch(promosLoading());\r\n    return fetch(baseUrl + 'promotions')\r\n    .then(response => {\r\n        if (response.ok) {\r\n          return response;\r\n        } else {\r\n          var error = new Error('Error ' + response.status + ': ' + response.statusText);\r\n          error.response = response;\r\n          throw error;\r\n        }\r\n      },\r\n      error => {\r\n            var errmess = new Error(error.message);\r\n            throw errmess;\r\n      })\r\n    .then(response => response.json())\r\n    .then(promos => dispatch(addPromos(promos)))\r\n    .catch(error => dispatch(promosFailed(error.message)));\r\n}\r\n\r\nexport const promosLoading = () => ({\r\n    type: ActionTypes.PROMOS_LOADING\r\n});\r\n\r\nexport const promosFailed = (errmess) => ({\r\n    type: ActionTypes.PROMOS_FAILED,\r\n    payload: errmess\r\n});\r\n\r\nexport const addPromos = (promos) => ({\r\n    type: ActionTypes.ADD_PROMOS,\r\n    payload: promos\r\n});\r\n\r\n\r\nexport const fetchLeaders = () => (dispatch) => {\r\n \r\n  dispatch(leadersLoading(true));\r\n\r\n  return fetch(baseUrl + 'leaders')\r\n  .then(response => {\r\n      if (response.ok) {\r\n        return response;\r\n      } else {\r\n        var error = new Error('Error ' + response.status + ': ' + response.statusText);\r\n        error.response = response;\r\n        throw error;\r\n      }\r\n    },\r\n    error => {\r\n          var errmess = new Error(error.message);\r\n          throw errmess;\r\n    })\r\n  .then(response => response.json())\r\n  .then(leaders => dispatch(addLeaders(leaders)))\r\n  .catch(error => dispatch(leadersFailed(error.message)));\r\n}\r\n\r\n\r\n\r\nexport const leadersLoading = () => ({\r\n  type: ActionTypes.LEADERS_LOADING\r\n});\r\n\r\nexport const leadersFailed = (errmess) => ({\r\n  type: ActionTypes.LEADERS_FAILED,\r\n  payload: errmess\r\n});\r\n\r\nexport const addLeaders = (leaders) => ({\r\n  type: ActionTypes.ADD_LEADERS,\r\n  payload: leaders\r\n});\r\n\r\n\r\n\r\nexport const addFeedback = (feedback) => ({\r\n  type: ActionTypes.ADD_FEEDBACK,\r\n  payload:feedback\r\n});\r\n\r\nexport const postFeedback = (firstname , lastname , number , email , agree , type , feedback) => (dispatch) => { \r\nconst newFeedback = {\r\n    firstname:firstname,\r\n      lastname:lastname,\r\n      telnum:number,\r\n      email:email,\r\n      agree:agree,\r\n      contactType:type,\r\n      message:feedback \r\n}\r\nnewFeedback.date = new Date().toISOString();\r\nreturn fetch(baseUrl + 'feedback' , {\r\n  method:'POST',\r\n  body:JSON.stringify(newFeedback),\r\n  headers:{\r\n      'Content-Type':'application/json'\r\n  },\r\n  credentials:'same-origin'\r\n})\r\n.then(response => {\r\n  if (response.ok) {\r\n    return response;\r\n  } else {\r\n    var error = new Error('Error ' + response.status + ': ' + response.statusText);\r\n    error.response = response;\r\n    throw error;\r\n  }\r\n},\r\nerror => {\r\n      var errmess = new Error(error.message);\r\n      throw errmess;\r\n})\r\n.then(response => response.json())\r\n.then(response => dispatch(addFeedback(response)))\r\n.then(response => alert(\"Thank you for your feedback!\" + JSON.stringify(response.payload)))\r\n.catch(error => {console.log('New Feedback ' + error.message)\r\n alert('your feedback could not be posted \\nError:' + error.message );});\r\n}\r\n\r\n\r\n","export const ADD_COMMENT ='ADD_COMMENT';\r\nexport const DISHES_LOADING = 'DISHES_LOADING';\r\nexport const DISHES_FAILED = 'DISHES_FAILED';\r\nexport const ADD_DISHES = 'ADD_DISHES';\r\nexport const ADD_COMMENTS= 'ADD_COMMENTS';\r\nexport const COMMENTS_FAILED= 'COMMENTS_FAILED';\r\nexport const PROMOS_LOADING= 'PROMOS_LOADING';\r\nexport const ADD_PROMOS= 'ADD_PROMOS';\r\nexport const PROMOS_FAILED= 'PROMOS_FAILED';\r\nexport const ADD_LEADERS = 'ADD_LEADERS';\r\nexport const LEADERS_LOADING = 'LEADERS_LOADING';\r\nexport const LEADERS_FAILED = 'LEADERS_FAILED';\r\nexport const ADD_FEEDBACK = 'ADD_FEEDBACK';\r\n","import React, { Component } from 'react';\r\nimport Header from './HeaderComponent';\r\nimport Home from './HomeComponent';\r\nimport DishdetailComponent from './DishdetailComponent';\r\nimport Menu from './MenuComponent';\r\nimport Footer from './FooterComponent';\r\nimport Contact from './ContactComponent';\r\nimport About from './AboutComponent';\r\nimport {Switch , Route , Redirect , withRouter} from 'react-router-dom';\r\nimport {connect} from 'react-redux';\r\nimport { postComment, fetchDishes , fetchComments , fetchPromos , fetchLeaders, postFeedback } from '../redux/ActionCreator';\r\nimport { actions } from 'react-redux-form';\r\nimport {TransitionGroup , CSSTransition} from 'react-transition-group'\r\n\r\n\r\nclass Main extends Component {\r\n  // constructor(props){\r\n  //   super(props);\r\n\r\n  // }\r\n  // onDishSelect(dishId) {\r\n  //   this.setState({selectedDish: dishId});\r\n// }\r\n\r\ncomponentDidMount() {\r\n  this.props.fetchPromos(); \r\n  this.props.fetchDishes();\r\n  this.props.fetchComments();\r\n  this.props.fetchLeaders();\r\n}\r\n  render() {\r\n    const HomePage = () => {\r\n      return(\r\n          <Home \r\n              dish={this.props.dishes.dishes.filter((dish) => dish.featured)[0]}\r\n              dishesLoading={this.props.dishes.isLoading}\r\n              dishErrMess={this.props.dishes.errMess}\r\n              promotion={this.props.promotions.promotions.filter((promo) => promo.featured)[0]}\r\n              promoLoading={this.props.promotions.isLoading}\r\n              promoErrMess={this.props.promotions.errMess}\r\n              leader={this.props.leaders.leaders.filter((leader) => leader.featured)[0]}\r\n              leadersloading = {this.props.leaders.isLoading}\r\n              leadersError = {this.props.leaders.errMess}\r\n              />\r\n      );\r\n    }\r\n    const DishWithId = ({match}) => {\r\n      return(\r\n        <DishdetailComponent dish={this.props.dishes.dishes.filter((dish) => dish.id === parseInt(match.params.dishId,10))[0]}\r\n            isLoading={this.props.dishes.isLoading}\r\n            errMess={this.props.dishes.errMess}\r\n            comments={this.props.comments.comments.filter((comment) => comment.dishId === parseInt(match.params.dishId,10))}\r\n            commentsErrMess={this.props.comments.errMess}\r\n            postComment={this.props.postComment}\r\n          />\r\n          \r\n      );\r\n    };\r\n    return (\r\n      <div>\r\n       <Header />\r\n       <TransitionGroup>\r\n       <CSSTransition key={this.props.location.key} classNames=\"page\" timeout={300}>\r\n       <Switch>\r\n         <Route path=\"/home\" component={HomePage} />\r\n         <Route exact path = '/menu' component={() => <Menu dishes = {this.props.dishes}/>} />\r\n         <Route path=\"/menu/:dishId\" component={DishWithId} />\r\n         <Route exact path=\"/aboutus\" component={() => <About leaders= {this.props.leaders}  />} />\r\n         <Route exact path='/contactus' component={() => <Contact resetFeedbackForm={this.props.resetFeedbackForm} postFeedback={this.props.postFeedback} />} />         \r\n         <Redirect to=\"/home\" />\r\n       </Switch>\r\n       </CSSTransition>\r\n       </TransitionGroup>\r\n\r\n        {/* <Menu dishes={this.state.dishes} \r\n            onClick={(dishId) => this.onDishSelect(dishId)} />  \r\n        <DishdetailComponent \r\n        dish={this.state.dishes.filter((dish) =>\r\n        dish.id === this.state.selectedDish )[0]} /> \r\n        */}\r\n        <Footer /> \r\n        </div>\r\n    );\r\n  }\r\n}\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n  \r\n  return{\r\n    dishes:state.dishes,\r\n    comments:state.comments,\r\n    promotions:state.promotions,\r\n    leaders:state.leaders\r\n  } \r\n}\r\n const mapDispatchToProps = (dispatch) => ({\r\n  postComment:(dishId , rating , author , comment) => dispatch(postComment(dishId , rating , author , comment)),\r\nfetchDishes: () => { dispatch(fetchDishes())},\r\nresetFeedbackForm: () => { dispatch(actions.reset('feedback'))},\r\nfetchComments: () => { dispatch(fetchComments())},\r\nfetchPromos: () => { dispatch(fetchPromos())},\r\nfetchLeaders:() => {dispatch(fetchLeaders())}  ,\r\npostFeedback :(firstname , lastname , number , email , agree , type , feedback) => dispatch(postFeedback(firstname , lastname , number , email , agree , type , feedback))\r\n })\r\n\r\nexport default withRouter(connect(mapStateToProps , mapDispatchToProps)(Main))","import * as ActionTypes from './ActionTypes';\r\n\r\nexport const Dishes = (state = { isLoading: true,\r\n    errMess: null,\r\n    dishes:[]}, action) => {\r\n    switch (action.type) {\r\n        case ActionTypes.DISHES_FAILED:\r\n            return {...state, isLoading: false, errMess: action.payload , dishes:[]};\r\n        case ActionTypes.ADD_DISHES:\r\n        return {...state, isLoading: false, errMess: null, dishes: action.payload};\r\n\r\n        case ActionTypes.DISHES_LOADING:\r\n            return {...state, isLoading: true, errMess: null, dishes: []}\r\n\r\n\r\n        default:\r\n            return state;\r\n    }\r\n};","import * as ActionTypes from './ActionTypes';\r\n\r\nexport const Comments = (state = { errMess: null, comments:[]}, action) => {\r\n  switch (action.type) {\r\n    case ActionTypes.ADD_COMMENTS:\r\n      return {...state, errMess: null, comments: action.payload};\r\n\r\n    case ActionTypes.COMMENTS_FAILED:\r\n      return {...state, errMess: action.payload};\r\n\r\n    case ActionTypes.ADD_COMMENT:\r\n        var comment = action.payload;\r\n        return { ...state, comments: state.comments.concat(comment)};\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};","import * as ActionTypes from './ActionTypes';\r\n\r\nexport const Promotions = (state  = { isLoading: true,\r\n                                        errMess: null,\r\n                                        promotions:[]}, action) => {\r\n    switch (action.type) {\r\n        case ActionTypes.ADD_PROMOS:\r\n        return {...state, isLoading: false, errMess: null, promotions: action.payload};\r\n\r\n        case ActionTypes.PROMOS_LOADING:\r\n            return {...state, isLoading: true, errMess: null, promotions: []}\r\n\r\n        case ActionTypes.PROMOS_FAILED:\r\n            return {...state, isLoading: false, errMess: action.payload};\r\n\r\n        default:\r\n          return state;\r\n      }\r\n};","import * as ActionTypes from './ActionTypes';\r\n\r\nexport const Leaders = (state = { isLoading: true,\r\n    errMess: null,\r\n    leaders:[]}, action) => {\r\n    switch (action.type) {\r\n        case ActionTypes.LEADERS_FAILED :\r\n            return {...state, isLoading: false, errMess: action.payload , leaders:[]};\r\n        case ActionTypes.ADD_LEADERS:\r\n        return {...state, isLoading: false, errMess: null, leaders: action.payload};\r\n\r\n        case ActionTypes.LEADERS_LOADING:\r\n            return {...state, isLoading: true, errMess: null, leaders: []}\r\n\r\n\r\n        default:\r\n            return state;\r\n    }\r\n};","export const InitialFeedback = {\r\n    firstname: '',\r\n    lastname: '',\r\n    telnum: '',\r\n    email: '',\r\n    agree: false,\r\n    contactType: 'Tel.',\r\n    message: ''\r\n};","import React, { Component } from 'react';\nimport './App.css';\nimport {BrowserRouter} from 'react-router-dom';\nimport Main from './components/MainComponent';\nimport {Provider} from 'react-redux';\nimport { ConfigureStore } from './redux/configureStore';\n\n\nconst store = ConfigureStore();\nclass App extends Component {\n  render() {\n    \n    return (\n      <Provider store={store}>\n      <BrowserRouter>\n      <div>\n       <Main />\n      </div>\n      </BrowserRouter>\n      </Provider>\n    );\n  }\n}\n\nexport default App;","import {applyMiddleware ,createStore , combineReducers} from 'redux';\r\nimport { Dishes } from './dishes';\r\nimport { createForms } from 'react-redux-form';\r\nimport { Comments } from './comments';\r\nimport { Promotions } from './Promotions';\r\nimport { Leaders } from './leaders'\r\nimport thunk from 'redux-thunk';\r\nimport logger from 'redux-logger'\r\nimport { InitialFeedback } from './forms';\r\n\r\n\r\n\r\nexport const ConfigureStore = () => {\r\n    const store = createStore(\r\n        combineReducers(\r\n            {dishes:Dishes,\r\n            comments:Comments,\r\n            promotions:Promotions,\r\n            leaders:Leaders,\r\n            ...createForms({\r\n                feedback: InitialFeedback\r\n            })\r\n            }),\r\n            applyMiddleware(thunk,logger)\r\n    );\r\n\r\n    return store;\r\n}\r\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'font-awesome/css/font-awesome.min.css';\nimport 'bootstrap-social/bootstrap-social.css';\nimport './index.css';\nimport App from './App';\nimport registerServiceWorker from './registerServiceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\nregisterServiceWorker();"],"sourceRoot":""}